{"version":3,"sources":["Components/AddCategory.js","helpers/GetGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","SetCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","Categories","setCategories","onClick","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAIcA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAqBzC,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MASlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAtBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRtBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,kDAEoCC,UAAUH,GAF9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAACC,GAAS,IAAD,EAC5B,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAkBZM,GAlBY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,4CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAI,QACnB,uBACA,mCAAMN,EAAN,WCNCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OATAC,qBAAU,WACNxB,EAASC,GACRwB,MAAM,SAACC,GAAD,OAAUH,EAAS,CACtBf,KAAMkB,EACNL,SAAS,SAGd,CAAEpB,IAEEqB,EDbwBK,CAAc1B,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACA,mCAAMpB,EAAN,OAEA,sBAAKgB,UAAU,YAAf,UAESI,GAAW,mBAAGJ,UAAU,uCAAb,wBACVH,EAAOJ,KAAK,SAACC,GAAD,OACd,wBAAC,EAAD,2BACKA,GADL,IAEAiB,IAAKjB,EAAIC,gBEWViB,EAxBM,WAAQ,IAAD,EAEY1C,mBAAS,CAAC,KAFtB,mBAEjB2C,EAFiB,KAELC,EAFK,KAIxB,OACI,qCACI,8CACA,cAAC,EAAD,CAAa7C,cAAe6C,IAC5B,uBAEA,wBAAQC,QAAY,kBAAMD,GAAe,SAAApC,GAAI,OAAO,WAAP,mBAAqBA,QAAlE,6BAEA,6BACKmC,EAAWpB,KAAK,SAACT,GAAD,OACjB,cAAC,EAAD,CAEAA,SAAWA,GADNA,YCffgC,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAQ,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.12208547.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport  const AddCategory = ({SetCategories}) => {\r\n    \r\n        const  [InputValue, setInputValue] = useState('');\r\n\r\n        const handleInputChange = (e) => {\r\n            \r\n            setInputValue(e.target.value)\r\n        }\r\n        \r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (InputValue.trim().length >= 2) {\r\n                SetCategories((cats) => [InputValue, ...cats]); //Esto es categories ahora\r\n                setInputValue(''); \r\n                \r\n            }\r\n\r\n\r\n            // console.log('Submit hecho');\r\n\r\n        }\r\n        return (\r\n            <form onSubmit= {handleSubmit}>\r\n                <input\r\n                type=\"text\" \r\n                value={InputValue}\r\n                onChange={handleInputChange}\r\n                \r\n                />\r\n            </form>\r\n        )\r\n    }\r\n\r\nAddCategory.propTypes = {\r\n    SetCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const GetGifs = async( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q= ${encodeURI(category)}&limit=10&api_key=9pefv5hEem0fukwcKTNNJEBS6AF5JDr9`;\r\n\r\n    const resp = await fetch (url); \r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( (img) => {\r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n\r\n\r\n        })\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    // console.log(url);\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn \">\r\n            <img src={url} alt=\"GIF\" ></img>\r\n            <hr></hr>\r\n            <h3> {title} </h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3> {category} </h3>\r\n\r\n        <div className=\"Card-Grid\">\r\n           \r\n                {loading && <p className=\"animate__animated animate__heartBeat\">Loading...</p> }\r\n                { images.map( (img) =>  (\r\n                <GifGridItem \r\n                { ...img} //Manda props.img con todas sus propiedades, no solo id, title y url.\r\n                key={img.id}\r\n                />))}\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { GetGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    }\r\n    );\r\n\r\n    useEffect(() => {\r\n        GetGifs( category )\r\n        .then( (imgs) => setState({ \r\n            data: imgs,\r\n            loading: false\r\n        }))\r\n        \r\n    }, [ category ])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () =>  {\r\n\r\n    const [Categories, setCategories] = useState(['']);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory SetCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <button onClick = { () => setCategories( cats => ( ['Pokemon', ...cats ]))}>Agregar Pokemon</button>\r\n\r\n            <ol>\r\n                {Categories.map( (category) => \r\n                <GifGrid \r\n                key={category}\r\n                category={ category } />)}\r\n            </ol>\r\n        \r\n        </>      \r\n            )\r\n    \r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render( <GifExpertApp />, divRoot  );\n\n\n"],"sourceRoot":""}